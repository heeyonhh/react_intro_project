{"ast":null,"code":"var _jsxFileName = \"/Users/hee/Desktop/intro_react_p/src/components/Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { headerNav } from \"../constants\";\nimport gsap from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navmov = useRef(null);\n  gsap.registerPlugin(ScrollTrigger);\n  useEffect(() => {\n    // gsap의 스크롤 트리거 애니메이션 생성\n    const tl = gsap.timeline();\n\n    // 스타일 및 위치 설정\n    const targetNav = navmov.current;\n    gsap.set(targetNav, {\n      fontSize: '1rem',\n      padding: '0px',\n      y: 0\n    });\n\n    // 스크롤 위치가 800px에 도달하면 스타일 변경 애니메이션 추가\n    tl.to(targetNav, {\n      fontSize: '0.7rem',\n      padding: '10px',\n      y: 400\n    });\n    ScrollTrigger.create({\n      trigger: targetNav,\n      start: 'bottom center',\n      toggleActions: \"play none none reverse\",\n      scrub: true,\n      animation: tl\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          children: [\"Constantly evolving, \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 54\n          }, this), \" New front-end developers.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"header_nav\",\n        ref: navmov,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [headerNav.map((nav, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"header_nav\",\n              children: nav.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"( Menu )\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Header, \"3AkMR09wXNSBElRhRkhrEpRO2AQ=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useRef","headerNav","gsap","ScrollTrigger","jsxDEV","_jsxDEV","Header","_s","navmov","registerPlugin","tl","timeline","targetNav","current","set","fontSize","padding","y","to","create","trigger","start","toggleActions","scrub","animation","id","children","className","href","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","nav","i","title","_c","$RefreshReg$"],"sources":["/Users/hee/Desktop/intro_react_p/src/components/Header.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { headerNav } from \"../constants\";\n\nimport gsap from 'gsap';\nimport ScrollTrigger from 'gsap/ScrollTrigger';\n\nconst Header = () => {\n    const navmov = useRef(null);\n\n    gsap.registerPlugin(ScrollTrigger);\n\n    useEffect(() => {\n        // gsap의 스크롤 트리거 애니메이션 생성\n        const tl = gsap.timeline();\n\n        // 스타일 및 위치 설정\n        const targetNav = navmov.current;\n        gsap.set(targetNav, {\n            fontSize: '1rem',\n            padding: '0px',\n            y: 0,\n        });\n\n        // 스크롤 위치가 800px에 도달하면 스타일 변경 애니메이션 추가\n        tl.to(targetNav, {\n            fontSize: '0.7rem',\n            padding: '10px',\n            y: 400,\n        });\n\n        ScrollTrigger.create({\n            trigger: targetNav,\n            start: 'bottom center',\n            toggleActions: \"play none none reverse\",\n            scrub: true,\n            animation: tl,\n        });\n    }, []);\n\n    return (\n        <header id=\"header\">\n            <div className=\"header_wrap\">\n                <div className=\"header_logo\">\n                    <a href=\"/\">Constantly evolving, <br /> New front-end developers.</a>\n                </div>\n                {/* ref를 navmov로 설정하여 헤더 nav 엘리먼트에 접근 가능하도록 함 */}\n                <nav className=\"header_nav\" ref={navmov}>\n                    <ul>\n                        {headerNav.map((nav, i) => (\n                            <li key={i}>\n                                <a className=\"header_nav\">\n                                    {nav.title}\n                                </a>\n                            </li>\n                        ))}\n                        <li>( Menu )</li>\n                    </ul>\n                </nav>\n            </div>\n        </header>\n    );\n};\n\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}