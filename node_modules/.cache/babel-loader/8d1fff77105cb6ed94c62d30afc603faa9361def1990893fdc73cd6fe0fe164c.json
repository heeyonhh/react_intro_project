{"ast":null,"code":"import React,{useEffect}from\"react\";import{Link}from\"react-router-dom\";import{gsap}from\"gsap\";import{ScrollTrigger}from\"gsap/ScrollTrigger\";import{projectData}from\"./data\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Project=function Project(){useEffect(function(){gsap.set('.aniitem',{opacity:0,x:100,y:0});// 초기 상태 설정\nvar animate=function animate(item){gsap.to(item,{autoAlpha:1,x:0,y:0,duration:1,ease:'expo'});};var items=gsap.utils.toArray('.aniitem');items.forEach(function(item,index){ScrollTrigger.create({trigger:item,start:'top 80%',end:'bottom 20%',onEnter:function onEnter(){return animate(item);},// 요소가 보이면 애니메이션 실행\ndelay:index*0.1// 순차적인 딜레이 적용\n});});},[]);return/*#__PURE__*/_jsx(\"section\",{id:\"project\",className:\"item\",\"data-bgcolor\":\"#212125\",children:/*#__PURE__*/_jsx(\"div\",{className:\"project_wrap\",children:projectData.map(function(project,i){return/*#__PURE__*/_jsxs(\"div\",{className:\"project item\",\"data-bgcolor\":project.bgcolor,children:[/*#__PURE__*/_jsx(\"div\",{className:\"project_url_wrap\",children:/*#__PURE__*/_jsxs(Link,{to:project.url,className:\"project_url\",target:\"_blank\",rel:\"noopener noreferrer\",children:[project.img,/*#__PURE__*/_jsx(\"p\",{className:\"project_logo\",children:project.logo})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"project_info_wrap aniitem\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"project_title\",children:project.title}),/*#__PURE__*/_jsx(\"span\",{className:\"project_type\",children:project.type}),/*#__PURE__*/_jsx(\"span\",{className:\"project_info\",children:project.info})]})]},i);})})});};export default Project;","map":{"version":3,"names":["React","useEffect","Link","gsap","ScrollTrigger","projectData","jsx","_jsx","jsxs","_jsxs","Project","set","opacity","x","y","animate","item","to","autoAlpha","duration","ease","items","utils","toArray","forEach","index","create","trigger","start","end","onEnter","delay","id","className","children","map","project","i","bgcolor","url","target","rel","img","logo","title","type","info"],"sources":["/Users/hee/Desktop/intro_react_p/src/components/Project.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nimport { projectData } from \"./data\";\n\nconst Project = () => {\n  useEffect(() => {\n\n    gsap.set('.aniitem', { opacity: 0, x: 100, y: 0 }); // 초기 상태 설정\n\n    const animate = (item) => {\n      gsap.to(item, {\n        autoAlpha: 1,\n        x: 0,\n        y: 0,\n        duration: 1,\n        ease: 'expo',\n      });\n    };\n\n    const items = gsap.utils.toArray('.aniitem');\n\n    items.forEach((item, index) => {\n      ScrollTrigger.create({\n        trigger: item,\n        start: 'top 80%',\n        end: 'bottom 20%',\n        onEnter: () => animate(item), // 요소가 보이면 애니메이션 실행\n        delay: index * 0.1, // 순차적인 딜레이 적용\n      });\n    });\n  }, []);\n\n  return (\n    <section id=\"project\" className=\"item\" data-bgcolor=\"#212125\">\n      <div className=\"project_wrap\">\n        {projectData.map((project, i) => (\n          <div key={i} className=\"project item\" data-bgcolor={project.bgcolor}>\n            <div className=\"project_url_wrap\">\n              <Link to={project.url} className=\"project_url\" target=\"_blank\" rel=\"noopener noreferrer\">\n                {project.img}\n                <p className=\"project_logo\">{project.logo}</p>\n              </Link>\n            </div>\n            <div className=\"project_info_wrap aniitem\">\n              <span className=\"project_title\">{project.title}</span>\n              <span className=\"project_type\">{project.type}</span>\n              <span className=\"project_info\">{project.info}</span>\n            </div>\n          </div>\n        ))}\n\n      </div>\n    </section>\n  );\n};\n\nexport default Project;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,OAASC,IAAI,KAAQ,MAAM,CAC3B,OAASC,aAAa,KAAQ,oBAAoB,CAElD,OAASC,WAAW,KAAQ,QAAQ,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAErC,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpBT,SAAS,CAAC,UAAM,CAEdE,IAAI,CAACQ,GAAG,CAAC,UAAU,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,CAAC,CAAE,GAAG,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAAE;AAEpD,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAIC,IAAI,CAAK,CACxBb,IAAI,CAACc,EAAE,CAACD,IAAI,CAAE,CACZE,SAAS,CAAE,CAAC,CACZL,CAAC,CAAE,CAAC,CACJC,CAAC,CAAE,CAAC,CACJK,QAAQ,CAAE,CAAC,CACXC,IAAI,CAAE,MACR,CAAC,CAAC,CACJ,CAAC,CAED,GAAM,CAAAC,KAAK,CAAGlB,IAAI,CAACmB,KAAK,CAACC,OAAO,CAAC,UAAU,CAAC,CAE5CF,KAAK,CAACG,OAAO,CAAC,SAACR,IAAI,CAAES,KAAK,CAAK,CAC7BrB,aAAa,CAACsB,MAAM,CAAC,CACnBC,OAAO,CAAEX,IAAI,CACbY,KAAK,CAAE,SAAS,CAChBC,GAAG,CAAE,YAAY,CACjBC,OAAO,CAAE,SAAAA,QAAA,QAAM,CAAAf,OAAO,CAACC,IAAI,CAAC,GAAE;AAC9Be,KAAK,CAAEN,KAAK,CAAG,GAAK;AACtB,CAAC,CAAC,CACJ,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,mBACElB,IAAA,YAASyB,EAAE,CAAC,SAAS,CAACC,SAAS,CAAC,MAAM,CAAC,eAAa,SAAS,CAAAC,QAAA,cAC3D3B,IAAA,QAAK0B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAC1B7B,WAAW,CAAC8B,GAAG,CAAC,SAACC,OAAO,CAAEC,CAAC,qBAC1B5B,KAAA,QAAawB,SAAS,CAAC,cAAc,CAAC,eAAcG,OAAO,CAACE,OAAQ,CAAAJ,QAAA,eAClE3B,IAAA,QAAK0B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BzB,KAAA,CAACP,IAAI,EAACe,EAAE,CAAEmB,OAAO,CAACG,GAAI,CAACN,SAAS,CAAC,aAAa,CAACO,MAAM,CAAC,QAAQ,CAACC,GAAG,CAAC,qBAAqB,CAAAP,QAAA,EACrFE,OAAO,CAACM,GAAG,cACZnC,IAAA,MAAG0B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEE,OAAO,CAACO,IAAI,CAAI,CAAC,EAC1C,CAAC,CACJ,CAAC,cACNlC,KAAA,QAAKwB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxC3B,IAAA,SAAM0B,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEE,OAAO,CAACQ,KAAK,CAAO,CAAC,cACtDrC,IAAA,SAAM0B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEE,OAAO,CAACS,IAAI,CAAO,CAAC,cACpDtC,IAAA,SAAM0B,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEE,OAAO,CAACU,IAAI,CAAO,CAAC,EACjD,CAAC,GAXET,CAYL,CAAC,EACP,CAAC,CAEC,CAAC,CACC,CAAC,CAEd,CAAC,CAED,cAAe,CAAA3B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}